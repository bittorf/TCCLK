In archive ../libtcc.a:

libtcc.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 libtcc.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l     F .text	000000000000008b link_option
0000000000000090 l     F .text	0000000000000050 skip_linker_arg
00000000000000e0 l     F .text	00000000000000cf strcat_printf
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
00000000000001b0 l     F .text	00000000000001f2 error1
0000000000000570 l     F .text	00000000000000a3 tcc_cleanup
0000000000000b50 l     F .text	00000000000000d7 tcc_split_path
0000000000000c50 l     F .text	000000000000004e copy_linker_arg
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000f70 l     F .text	00000000000002ce tcc_compile
00000000000015c0 l     F .text	0000000000000059 parse_option_D
0000000000001b40 l     F .text	0000000000000097 tcc_add_library_internal
0000000000000140 l     O .rodata	0000000000000290 tcc_options
0000000000000420 l     O .rodata	0000000000000040 warning_defs
0000000000000000 l    d  .rodata	0000000000000000 .rodata
00000000000003e0 l     O .rodata	0000000000000040 flag_defs
0000000000000000 l    d  .rodata.cst8	0000000000000000 .rodata.cst8
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000008 l       .rodata.cst8	0000000000000000 .LC90
0000000000000000 l       .rodata.cst8	0000000000000000 .LC89
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000         *UND*	0000000000000000 strchr
0000000000000000         *UND*	0000000000000000 strlen
0000000000000000         *UND*	0000000000000000 vsnprintf
0000000000000000         *UND*	0000000000000000 file
0000000000000000         *UND*	0000000000000000 stderr
0000000000000000         *UND*	0000000000000000 fprintf
00000000000003b0 g     F .text	0000000000000045 pstrcpy
0000000000000400 g     F .text	0000000000000063 pstrcat
0000000000000470 g     F .text	000000000000002f pstrncpy
0000000000000000         *UND*	0000000000000000 memcpy
00000000000004a0 g     F .text	0000000000000029 tcc_basename
0000000000000000         *UND*	0000000000000000 __rawmemchr
00000000000004d0 g     F .text	000000000000002b tcc_fileextension
0000000000000000         *UND*	0000000000000000 strrchr
0000000000000500 g     F .text	0000000000000005 tcc_free
0000000000000000         *UND*	0000000000000000 free
0000000000000510 g     F .text	0000000000000002 tcc_memstats
0000000000000520 g     F .text	0000000000000050 dynarray_reset
0000000000000008       O *COM*	0000000000000008 tcc_state
0000000000000000         *UND*	0000000000000000 free_defines
0000000000000000         *UND*	0000000000000000 tok_ident
0000000000000000         *UND*	0000000000000000 table_ident
0000000000000000         *UND*	0000000000000000 nb_sym_pools
0000000000000000         *UND*	0000000000000000 sym_pools
0000000000000000         *UND*	0000000000000000 tokcstr
0000000000000000         *UND*	0000000000000000 cstr_free
0000000000000000         *UND*	0000000000000000 sym_free_first
0000000000000000         *UND*	0000000000000000 macro_ptr
0000000000000620 g     F .text	0000000000000188 put_extern_sym2
0000000000000000         *UND*	0000000000000000 symtab_section
0000000000000000         *UND*	0000000000000000 get_tok_str
0000000000000000         *UND*	0000000000000000 add_elf_sym
00000000000007b0 g     F .text	000000000000000b put_extern_sym
00000000000007c0 g     F .text	000000000000007c greloc
0000000000000000         *UND*	0000000000000000 put_elf_reloc
0000000000000840 g     F .text	000000000000000f tcc_set_error_func
0000000000000850 g     F .text	00000000000000a0 tcc_error_noabort
00000000000008f0 g     F .text	00000000000000c1 tcc_error
0000000000000000         *UND*	0000000000000000 longjmp
0000000000000000         *UND*	0000000000000000 exit
00000000000009c0 g     F .text	000000000000001f tcc_realloc
0000000000000000         *UND*	0000000000000000 realloc
00000000000009e0 g     F .text	0000000000000058 section_realloc
0000000000000000         *UND*	0000000000000000 memset
0000000000000a40 g     F .text	000000000000003f section_reserve
0000000000000a80 g     F .text	0000000000000048 section_ptr_add
0000000000000ad0 g     F .text	000000000000007d dynarray_add
0000000000000000         *UND*	0000000000000000 cstr_new
0000000000000000         *UND*	0000000000000000 cstr_ccat
0000000000000000         *UND*	0000000000000000 cstr_cat
0000000000000c30 g     F .text	000000000000001f tcc_malloc
0000000000000000         *UND*	0000000000000000 malloc
0000000000000ca0 g     F .text	000000000000003f tcc_strdup
0000000000000000         *UND*	0000000000000000 strcpy
0000000000000ce0 g     F .text	0000000000000038 tcc_mallocz
0000000000000d20 g     F .text	00000000000000f5 new_section
0000000000000e20 g     F .text	0000000000000093 find_section
0000000000000000         *UND*	0000000000000000 strcmp
0000000000000ec0 g     F .text	00000000000000af tcc_warning
0000000000000000         *UND*	0000000000000000 preprocess_init
0000000000000000         *UND*	0000000000000000 cur_text_section
0000000000000000         *UND*	0000000000000000 funcname
0000000000000000         *UND*	0000000000000000 anon_sym
0000000000000000         *UND*	0000000000000000 put_elf_sym
0000000000000000         *UND*	0000000000000000 char_pointer_type
0000000000000000         *UND*	0000000000000000 int_type
0000000000000000         *UND*	0000000000000000 mk_pointer
0000000000000000         *UND*	0000000000000000 size_type
0000000000000000         *UND*	0000000000000000 func_old_type
0000000000000000         *UND*	0000000000000000 sym_push
0000000000000000         *UND*	0000000000000000 define_stack
0000000000000000         *UND*	0000000000000000 nocode_wanted
0000000000000000         *UND*	0000000000000000 _setjmp
0000000000000000         *UND*	0000000000000000 gen_inline_functions
0000000000000000         *UND*	0000000000000000 global_stack
0000000000000000         *UND*	0000000000000000 sym_pop
0000000000000000         *UND*	0000000000000000 local_stack
0000000000000000         *UND*	0000000000000000 text_section
0000000000000000         *UND*	0000000000000000 getcwd
0000000000000000         *UND*	0000000000000000 put_stabs_r
0000000000000000         *UND*	0000000000000000 vtop
0000000000000000         *UND*	0000000000000000 tok_flags
0000000000000000         *UND*	0000000000000000 parse_flags
0000000000000000         *UND*	0000000000000000 ch
0000000000000000         *UND*	0000000000000000 next
0000000000000000         *UND*	0000000000000000 decl
0000000000000000         *UND*	0000000000000000 tok
0000000000000000         *UND*	0000000000000000 expect
0000000000001240 g     F .text	00000000000000b9 tcc_open_bf
0000000000001300 g     F .text	0000000000000031 tcc_close
0000000000000000         *UND*	0000000000000000 close
0000000000000000         *UND*	0000000000000000 total_lines
0000000000001340 g     F .text	0000000000000108 tcc_open
0000000000000000         *UND*	0000000000000000 open
0000000000000000         *UND*	0000000000000000 printf
0000000000001450 g     F .text	0000000000000070 tcc_compile_string
00000000000014c0 g     F .text	00000000000000f6 tcc_define_symbol
0000000000000000         *UND*	0000000000000000 next_nomacro
0000000000000000         *UND*	0000000000000000 parse_define
0000000000001620 g     F .text	0000000000000032 tcc_undefine_symbol
0000000000000000         *UND*	0000000000000000 tok_alloc
0000000000000000         *UND*	0000000000000000 define_find
0000000000000000         *UND*	0000000000000000 define_undef
0000000000001660 g     F .text	00000000000001d0 tcc_delete
0000000000000000         *UND*	0000000000000000 dlclose
0000000000001830 g     F .text	0000000000000021 tcc_add_include_path
0000000000001860 g     F .text	0000000000000021 tcc_add_sysinclude_path
0000000000001890 g     F .text	00000000000002ad tcc_add_file_internal
0000000000000000         *UND*	0000000000000000 tcc_assemble
0000000000000000         *UND*	0000000000000000 tcc_preprocess
0000000000000000         *UND*	0000000000000000 read
0000000000000000         *UND*	0000000000000000 lseek
0000000000000000         *UND*	0000000000000000 memcmp
0000000000000000         *UND*	0000000000000000 tcc_load_archive
0000000000000000         *UND*	0000000000000000 tcc_load_ldscript
0000000000000000         *UND*	0000000000000000 dlopen
0000000000000000         *UND*	0000000000000000 tcc_load_dll
0000000000000000         *UND*	0000000000000000 tcc_load_object_file
0000000000000000         *UND*	0000000000000000 snprintf
0000000000001be0 g     F .text	000000000000001a tcc_add_file
0000000000001c00 g     F .text	0000000000000021 tcc_add_library_path
0000000000001c30 g     F .text	000000000000001d tcc_add_dll
0000000000001c50 g     F .text	0000000000000043 tcc_add_crt
0000000000001ca0 g     F .text	000000000000008e tcc_add_library
0000000000001d30 g     F .text	0000000000000031 tcc_add_symbol
0000000000001d70 g     F .text	000000000000010f tcc_set_output_type
0000000000000000         *UND*	0000000000000000 stab_section
0000000000000000         *UND*	0000000000000000 stabstr_section
0000000000000000         *UND*	0000000000000000 put_elf_str
0000000000000000         *UND*	0000000000000000 put_stabs
0000000000001e80 g     F .text	0000000000000038 tcc_set_lib_path
0000000000001ec0 g     F .text	00000000000002e9 tcc_new
0000000000000000         *UND*	0000000000000000 preprocess_new
0000000000000000         *UND*	0000000000000000 define_push
0000000000000000         *UND*	0000000000000000 sscanf
0000000000000000         *UND*	0000000000000000 sprintf
0000000000000000         *UND*	0000000000000000 data_section
0000000000000000         *UND*	0000000000000000 bss_section
0000000000000000         *UND*	0000000000000000 new_symtab
0000000000000000         *UND*	0000000000000000 strtab_section
00000000000021b0 g     F .text	00000000000000a0 set_flag
0000000000002250 g     F .text	000000000000011e tcc_set_options
0000000000002370 g     F .text	0000000000000885 tcc_parse_args
0000000000000000         *UND*	0000000000000000 strtoull
0000000000000000         *UND*	0000000000000000 strtol
0000000000000000         *UND*	0000000000000000 tcc_set_num_callers
0000000000000000         *UND*	0000000000000000 puts
0000000000000000         *UND*	0000000000000000 strtoul
0000000000002c00 g     F .text	0000000000000074 tcc_print_stats
0000000000000000         *UND*	0000000000000000 total_bytes
0000000000000000 g     O .data	0000000000000004 tcc_ext
0000000000000004 g     O .data	0000000000000004 gnu_ext



tccpp.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 tccpp.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l     F .text	000000000000008a search_cached_include
0000000000000090 l     F .text	0000000000000049 tok_str_realloc
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
00000000000000e0 l     F .text	000000000000011f tok_alloc_new
0000000000000200 l     F .text	0000000000000172 tok_str_add2
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000430 l     F .text	00000000000000a8 add_char.constprop.5
0000000000010000 l     O .bss	0000000000000020 cstr_buf.8074
0000000000000000 l     O .bss	0000000000010000 hash_ident
0000000000010020 l     O .bss	0000000000000401 buf.8073
00000000000019e0 l     O .rodata	0000000000000040 tok_two_chars
00000000000009d0 l     F .text	0000000000000206 macro_is_equal
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000c80 l     F .text	00000000000001d9 parse_pp_string
0000000000000e60 l     F .text	0000000000000123 parse_line_comment
0000000000000fd0 l     F .text	0000000000000062 handle_stray_noerror
0000000000001040 l     F .text	0000000000000028 handle_stray
0000000000001070 l     F .text	0000000000000053 handle_stray1
0000000000004030 l     F .text	0000000000000127 next_nomacro_spc
0000000000010550 l     O .bss	0000000000000004 unget_buffer_enabled
0000000000010558 l     O .bss	0000000000000008 unget_saved_macro_ptr
0000000000010548 l     O .bss	0000000000000008 macro_ptr_allocated
0000000000004b80 l     F .text	0000000000000afa macro_subst_tok
0000000000010560 l     O .bss	0000000000000401 token_buf
0000000000002110 l     F .text	000000000000015a expr_preprocess
0000000000002f80 l     F .text	00000000000010aa next_nomacro1
0000000000010440 l     O .bss	0000000000000101 isidnum_table
00000000000043f0 l     F .text	0000000000000784 macro_subst
0000000000001a20 l     O .rodata	0000000000000030 ab_month_name
0000000000010970 l     O .bss	0000000000000014 unget_saved_buffer
0000000000001a60 l     O .rodata	000000000000141c tcc_keywords
0000000000000000 l    d  .rodata.cst8	0000000000000000 .rodata.cst8
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l       .rodata.cst8	0000000000000000 .LC16
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000         *UND*	0000000000000000 strcmp
0000000000000000         *UND*	0000000000000000 tcc_realloc
0000000000000004       O *COM*	0000000000000004 tok_ident
0000000000000008       O *COM*	0000000000000008 table_ident
0000000000000000         *UND*	0000000000000000 tcc_malloc
0000000000000000         *UND*	0000000000000000 memcpy
0000000000000000         *UND*	0000000000000000 tcc_error
0000000000000380 g     F .text	000000000000000f expect
0000000000000390 g     F .text	0000000000000096 cstr_ccat
00000000000004e0 g     F .text	0000000000000032 cstr_cat
0000000000000520 g     F .text	0000000000000096 cstr_wccat
00000000000005c0 g     F .text	0000000000000020 cstr_new
00000000000005e0 g     F .text	0000000000000016 cstr_free
0000000000000000         *UND*	0000000000000000 tcc_free
0000000000000600 g     F .text	0000000000000007 cstr_reset
0000000000000610 g     F .text	00000000000000a4 tok_alloc
0000000000000000         *UND*	0000000000000000 memcmp
00000000000006c0 g     F .text	000000000000030a get_tok_str
0000000000000000         *UND*	0000000000000000 sprintf
0000000000000000         *UND*	0000000000000000 pstrcpy
0000000000000be0 g     F .text	000000000000009a handle_eob
0000000000000008       O *COM*	0000000000000008 file
0000000000000000         *UND*	0000000000000000 read
0000000000000004       O *COM*	0000000000000004 total_bytes
0000000000000f90 g     F .text	0000000000000040 inp
0000000000000004       O *COM*	0000000000000004 ch
00000000000010d0 g     F .text	0000000000000029 minp
0000000000001100 g     F .text	000000000000023a parse_comment
0000000000001340 g     F .text	0000000000000037 save_parse_state
0000000000000008       O *COM*	0000000000000008 macro_ptr
0000000000000004       O *COM*	0000000000000004 tok
0000000000000010       O *COM*	0000000000000010 tokc
0000000000001380 g     F .text	0000000000000037 restore_parse_state
00000000000013c0 g     F .text	000000000000001d tok_str_new
00000000000013e0 g     F .text	0000000000000005 tok_str_free
00000000000013f0 g     F .text	0000000000000049 tok_str_add
0000000000001440 g     F .text	0000000000000043 tok_str_add_tok
0000000000001490 g     F .text	00000000000000ca define_push
0000000000000000         *UND*	0000000000000000 define_stack
0000000000000000         *UND*	0000000000000000 sym_push2
0000000000000000         *UND*	0000000000000000 tcc_warning
0000000000001560 g     F .text	0000000000000031 define_undef
00000000000015a0 g     F .text	000000000000002c define_find
00000000000015d0 g     F .text	0000000000000070 free_defines
0000000000000000         *UND*	0000000000000000 sym_free
0000000000001640 g     F .text	000000000000002c label_find
0000000000001670 g     F .text	0000000000000091 label_push
0000000000000000         *UND*	0000000000000000 global_label_stack
0000000000001710 g     F .text	00000000000000cf label_pop
0000000000000000         *UND*	0000000000000000 cur_text_section
0000000000000000         *UND*	0000000000000000 put_extern_sym
00000000000017e0 g     F .text	0000000000000900 next
0000000000000004       O *COM*	0000000000000004 parse_flags
0000000000004160 g     F .text	0000000000000031 next_nomacro
0000000000000000         *UND*	0000000000000000 ldexp
0000000000000000         *UND*	0000000000000000 __errno_location
0000000000000000         *UND*	0000000000000000 strtod
0000000000000000         *UND*	0000000000000000 tcc_ext
0000000000000000         *UND*	0000000000000000 strtold
0000000000000000         *UND*	0000000000000000 strtof
00000000000020e0 g     F .text	000000000000002e skip
0000000000000000         *UND*	0000000000000000 expr_const
0000000000002270 g     F .text	0000000000000d0c preprocess
0000000000000000         *UND*	0000000000000000 tcc_state
00000000000041a0 g     F .text	000000000000024d parse_define
0000000000000000         *UND*	0000000000000000 pstrcat
0000000000000000         *UND*	0000000000000000 tcc_open
0000000000000000         *UND*	0000000000000000 tcc_strdup
0000000000000000         *UND*	0000000000000000 dynarray_add
0000000000000000         *UND*	0000000000000000 put_stabs
0000000000000004       O *COM*	0000000000000004 tok_flags
0000000000000000         *UND*	0000000000000000 tcc_basename
0000000000000000         *UND*	0000000000000000 pstrncpy
0000000000000000         *UND*	0000000000000000 memmove
0000000000000020       O *COM*	0000000000000020 tokcstr
0000000000000000         *UND*	0000000000000000 tcc_close
0000000000000000         *UND*	0000000000000000 gnu_ext
0000000000000000         *UND*	0000000000000000 put_stabd
0000000000000000         *UND*	0000000000000000 strcpy
0000000000000000         *UND*	0000000000000000 tcc_open_bf
0000000000000000         *UND*	0000000000000000 sym_find2
0000000000000000         *UND*	0000000000000000 snprintf
0000000000000000         *UND*	0000000000000000 time
0000000000000000         *UND*	0000000000000000 localtime
0000000000005680 g     F .text	00000000000000b7 unget_tok
0000000000005740 g     F .text	000000000000004b preprocess_init
0000000000000000         *UND*	0000000000000000 __vstack
0000000000000000         *UND*	0000000000000000 vtop
0000000000005790 g     F .text	00000000000000b7 preprocess_new
0000000000000000         *UND*	0000000000000000 memset
0000000000005850 g     F .text	0000000000000210 tcc_preprocess
0000000000000000         *UND*	0000000000000000 fprintf
0000000000000000         *UND*	0000000000000000 fputs
0000000000000000         *UND*	0000000000000000 fputc
0000000000000004       O *COM*	0000000000000004 total_lines



tccgen.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 tccgen.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l     F .text	0000000000000032 weaken_symbol
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000040 l     F .text	000000000000009f put_func_debug
00000000000000e0 l     F .text	000000000000016f compare_types
0000000000000250 l     F .text	0000000000000007 is_compatible_types
0000000000000260 l     F .text	0000000000000031 is_label.part.3
00000000000002a0 l     F .text	000000000000030c type_to_str.constprop.12
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
00000000000005b0 l     F .text	0000000000000205 check_comparison_pointer_types
0000000000000da0 l     F .text	000000000000000c vdup
0000000000001bc0 l     F .text	00000000000006e8 gen_cast
00000000000027b0 l     F .text	000000000000003b vla_runtime_type_size
0000000000002a20 l     F .text	00000000000004fe gen_opic
0000000000002850 l     F .text	000000000000006a force_charshort_cast
0000000000002570 l     F .text	000000000000004c lexpand
00000000000025c0 l     F .text	00000000000000c0 vsetc
0000000000002680 l     F .text	0000000000000027 vpush_tokc
00000000000026d0 l     F .text	0000000000000025 vseti
00000000000027f0 l     F .text	0000000000000054 init_putz.part.8
00000000000028e0 l     F .text	0000000000000057 gaddrof
0000000000002fe0 l     F .text	0000000000000031 lbuild
0000000000003020 l     F .text	00000000000000e6 gv_dup
0000000000003110 l     F .text	000000000000031d gen_assign_cast
00000000000089d0 l     F .text	0000000000000a90 decl0
0000000000003af0 l     F .text	0000000000000c49 block
0000000000004740 l     F .text	000000000000018d gen_function
0000000000000000 l     O .bss	0000000000000004 in_sizeof.8824
0000000000006670 l     F .text	000000000000007b expr_eq
0000000000007860 l     F .text	0000000000000039 parse_type
0000000000008370 l     F .text	0000000000000658 decl_initializer_alloc
0000000000006720 l     F .text	0000000000000490 parse_btype
0000000000006fd0 l     F .text	0000000000000215 type_decl
0000000000005980 l     F .text	0000000000000039 expr_shift
00000000000059c0 l     F .text	0000000000000044 expr_cmp
0000000000005a10 l     F .text	0000000000000044 expr_cmpeq
0000000000005a60 l     F .text	000000000000003a expr_and
0000000000005aa0 l     F .text	000000000000003a expr_xor
0000000000005ae0 l     F .text	000000000000003a expr_or
0000000000005b20 l     F .text	000000000000003d expr_land_const
0000000000005b60 l     F .text	0000000000000041 expr_land.part.11
0000000000005bb0 l     F .text	00000000000006ba expr_cond
00000000000062c0 l     F .text	00000000000003a5 parse_attribute
00000000000071f0 l     F .text	000000000000066f struct_decl
0000000000006bb0 l     F .text	0000000000000412 post_type
00000000000078a0 l     F .text	00000000000002d8 init_putv
0000000000007b80 l     F .text	00000000000007e5 decl_initializer
0000000000009460 l     F .text	00000000000003fc decl_designator
0000000000000000 l    d  .rodata.cst4	0000000000000000 .rodata.cst4
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000004 l       .rodata.cst4	0000000000000000 .LC36
0000000000000000 l       .rodata.cst4	0000000000000000 .LC35
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000008       O *COM*	0000000000000008 symtab_section
0000000000000008       O *COM*	0000000000000008 funcname
0000000000000000         *UND*	0000000000000000 snprintf
0000000000000000         *UND*	0000000000000000 file
0000000000000008       O *COM*	0000000000000008 cur_text_section
0000000000000000         *UND*	0000000000000000 put_stabs_r
0000000000000000         *UND*	0000000000000000 put_stabn
0000000000000004       O *COM*	0000000000000004 last_ind
0000000000000004       O *COM*	0000000000000004 last_line_num
0000000000000000         *UND*	0000000000000000 tok
0000000000000000         *UND*	0000000000000000 next
0000000000000000         *UND*	0000000000000000 unget_tok
0000000000000000         *UND*	0000000000000000 pstrcat
0000000000000000         *UND*	0000000000000000 pstrcpy
0000000000000000         *UND*	0000000000000000 get_tok_str
0000000000000000         *UND*	0000000000000000 tcc_error
0000000000000000         *UND*	0000000000000000 tcc_warning
00000000000007c0 g     F .text	000000000000000f is_float
00000000000007d0 g     F .text	0000000000000016 ieee_finite
00000000000007f0 g     F .text	000000000000001a test_lvalue
0000000000000008       O *COM*	0000000000000008 vtop
0000000000000000         *UND*	0000000000000000 expect
0000000000000810 g     F .text	0000000000000021 sym_free
0000000000000008       O *COM*	0000000000000008 sym_free_first
0000000000000000         *UND*	0000000000000000 tcc_free
0000000000000840 g     F .text	0000000000000187 sym_push2
0000000000000008       O *COM*	0000000000000008 local_stack
0000000000000008       O *COM*	0000000000000008 scope_stack_bottom
0000000000000000         *UND*	0000000000000000 tcc_malloc
0000000000000004       O *COM*	0000000000000004 nb_sym_pools
0000000000000008       O *COM*	0000000000000008 sym_pools
0000000000000000         *UND*	0000000000000000 dynarray_add
00000000000009d0 g     F .text	0000000000000022 sym_find2
0000000000000a00 g     F .text	000000000000002c struct_find
0000000000000000         *UND*	0000000000000000 tok_ident
0000000000000000         *UND*	0000000000000000 table_ident
0000000000000a30 g     F .text	000000000000002c sym_find
0000000000000a60 g     F .text	00000000000000a5 sym_push
0000000000000008       O *COM*	0000000000000008 global_stack
0000000000000b10 g     F .text	000000000000005a global_identifier_push
0000000000000b70 g     F .text	0000000000000074 sym_pop
0000000000000bf0 g     F .text	0000000000000009 swap
0000000000000c00 g     F .text	000000000000008b get_sym_ref
0000000000000004       O *COM*	0000000000000004 anon_sym
0000000000000000         *UND*	0000000000000000 put_extern_sym
0000000000000c90 g     F .text	0000000000000085 external_global_sym
0000000000000d20 g     F .text	0000000000000072 vpushv
0000000000004040       O *COM*	0000000000000020 __vstack
0000000000000db0 g     F .text	0000000000000122 vrotb
0000000000000ee0 g     F .text	0000000000000110 vrote
0000000000000ff0 g     F .text	000000000000000e vrott
0000000000001000 g     F .text	000000000000006f vpop
0000000000000004       O *COM*	0000000000000004 nocode_wanted
0000000000000000         *UND*	0000000000000000 o
0000000000000000         *UND*	0000000000000000 gsym
0000000000001070 g     F .text	00000000000000c3 type_size
0000000000001140 g     F .text	00000000000001a7 save_reg
0000000000000004       O *COM*	0000000000000004 loc
0000000000000000         *UND*	0000000000000000 store
0000000000000010       O *COM*	0000000000000010 char_pointer_type
00000000000012f0 g     F .text	000000000000005a save_regs
0000000000001350 g     F .text	00000000000000f4 get_reg
0000000000000000         *UND*	0000000000000000 reg_classes
0000000000001450 g     F .text	0000000000000768 gen_op
0000000000002940 g     F .text	00000000000000d6 vswap
0000000000000004       O *COM*	0000000000000004 const_wanted
0000000000002790 g     F .text	000000000000001e vpushi
0000000000002760 g     F .text	000000000000002c vpush64
0000000000000000         *UND*	0000000000000000 gen_opf
0000000000000010       O *COM*	0000000000000010 func_old_type
0000000000002700 g     F .text	0000000000000051 vpush_global_sym
0000000000000000         *UND*	0000000000000000 gfunc_call
00000000000022b0 g     F .text	00000000000002ba gv
0000000000000000         *UND*	0000000000000000 gen_cvt_ftoi
0000000000000000         *UND*	0000000000000000 gen_cvt_itof
0000000000000000         *UND*	0000000000000000 gen_cvt_ftof
0000000000000000         *UND*	0000000000000000 load
0000000000000008       O *COM*	0000000000000008 data_section
0000000000000000         *UND*	0000000000000000 section_ptr_add
0000000000000000         *UND*	0000000000000000 tokc
00000000000026b0 g     F .text	0000000000000014 vset
0000000000000010       O *COM*	0000000000000010 int_type
00000000000028c0 g     F .text	0000000000000016 vpush
0000000000000000         *UND*	0000000000000000 gen_opi
0000000000000000         *UND*	0000000000000000 gen_opl
0000000000002f20 g     F .text	00000000000000b2 gv2
0000000000003430 g     F .text	000000000000002b mk_pointer
0000000000003460 g     F .text	0000000000000452 vstore
00000000000038c0 g     F .text	0000000000000096 inc
0000000000003960 g     F .text	000000000000006f parse_asm_str
0000000000000000         *UND*	0000000000000000 skip
0000000000000000         *UND*	0000000000000000 cstr_new
0000000000000000         *UND*	0000000000000000 cstr_cat
0000000000000000         *UND*	0000000000000000 cstr_ccat
00000000000039d0 g     F .text	0000000000000038 lvalue_type
0000000000003a10 g     F .text	00000000000000c6 indir
0000000000003ae0 g     F .text	0000000000000007 decl
0000000000000000         *UND*	0000000000000000 tcc_state
0000000000000004       O *COM*	0000000000000004 ind
0000000000000004       O *COM*	0000000000000004 func_ind
00000000000066f0 g     F .text	000000000000002d gexpr
0000000000000000         *UND*	0000000000000000 gtst
0000000000000000         *UND*	0000000000000000 gjmp
0000000000006270 g     F .text	000000000000004e expr_const
0000000000000000         *UND*	0000000000000000 gnu_ext
0000000000000008       O *COM*	0000000000000008 local_label_stack
0000000000000000         *UND*	0000000000000000 label_pop
0000000000000000         *UND*	0000000000000000 label_push
0000000000000010       O *COM*	0000000000000010 func_vt
0000000000000004       O *COM*	0000000000000004 rsym
0000000000000000         *UND*	0000000000000000 gjmp_addr
0000000000000000         *UND*	0000000000000000 gsym_addr
0000000000000004       O *COM*	0000000000000004 func_vc
0000000000000000         *UND*	0000000000000000 label_find
0000000000000000         *UND*	0000000000000000 asm_instr
0000000000000000         *UND*	0000000000000000 ggoto
0000000000000008       O *COM*	0000000000000008 global_label_stack
0000000000000000         *UND*	0000000000000000 gfunc_prolog
0000000000000000         *UND*	0000000000000000 gfunc_epilog
00000000000048d0 g     F .text	0000000000000120 gen_inline_functions
0000000000000000         *UND*	0000000000000000 macro_ptr
0000000000000008       O *COM*	0000000000000008 text_section
0000000000000000         *UND*	0000000000000000 tok_str_free
0000000000000000         *UND*	0000000000000000 dynarray_reset
00000000000049f0 g     F .text	0000000000000f02 unary
0000000000000000         *UND*	0000000000000000 strlen
0000000000000000         *UND*	0000000000000000 memcpy
0000000000000010       O *COM*	0000000000000010 size_type
0000000000000004       O *COM*	0000000000000004 global_expr
0000000000005900 g     F .text	0000000000000038 expr_prod
0000000000005940 g     F .text	000000000000003b expr_sum
0000000000000000         *UND*	0000000000000000 tok_alloc
0000000000000000         *UND*	0000000000000000 find_section
0000000000000000         *UND*	0000000000000000 section_realloc
0000000000000000         *UND*	0000000000000000 greloc
0000000000000000         *UND*	0000000000000000 tok_str_new
0000000000000000         *UND*	0000000000000000 restore_parse_state
0000000000000000         *UND*	0000000000000000 tok_str_add_tok
0000000000000000         *UND*	0000000000000000 tok_str_add
0000000000000000         *UND*	0000000000000000 save_parse_state
0000000000000008       O *COM*	0000000000000008 bss_section
0000000000000000         *UND*	0000000000000000 put_extern_sym2
0000000000000000         *UND*	0000000000000000 tcc_strdup
0000000000000000         *UND*	0000000000000000 cstr_free
0000000000000000         *UND*	0000000000000000 asm_global_instr
0000000000000000         *UND*	0000000000000000 strcpy
0000000000000008       O *COM*	0000000000000008 define_stack
0000000000000008       O *COM*	0000000000000008 stabstr_section
0000000000000008       O *COM*	0000000000000008 stab_section
0000000000000008       O *COM*	0000000000000008 strtab_section
0000000000000008       O *COM*	0000000000000008 last_text_section



tccelf.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 tccelf.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l     F .text	0000000000000042 elf_hash
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000050 l     F .text	0000000000000112 ld_next
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000170 l     F .text	000000000000037d ld_add_file_list
0000000000000000 l     O .bss	0000000000000004 new_undef_sym
00000000000004f0 l     F .text	0000000000000060 load_data
0000000000000550 l     F .text	0000000000000036 put_dt
0000000000000590 l     F .text	000000000000003d tcc_add_support.constprop.1
0000000000000bf0 l     F .text	00000000000000ce build_got
0000000000000cc0 l     F .text	00000000000000ff add_init_array_defines
0000000000000ea0 l     F .text	00000000000002bb put_got_entry
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000         *UND*	0000000000000000 ch
0000000000000000         *UND*	0000000000000000 inp
0000000000000000         *UND*	0000000000000000 minp
0000000000000000         *UND*	0000000000000000 file
0000000000000000         *UND*	0000000000000000 parse_comment
0000000000000000         *UND*	0000000000000000 strchr
0000000000000000         *UND*	0000000000000000 expect
0000000000000000         *UND*	0000000000000000 dynarray_reset
0000000000000000         *UND*	0000000000000000 tcc_add_file_internal
0000000000000000         *UND*	0000000000000000 tcc_strdup
0000000000000000         *UND*	0000000000000000 dynarray_add
0000000000000000         *UND*	0000000000000000 pstrcpy
0000000000000000         *UND*	0000000000000000 snprintf
0000000000000000         *UND*	0000000000000000 tcc_error_noabort
0000000000000000         *UND*	0000000000000000 tcc_add_dll
0000000000000000         *UND*	0000000000000000 tcc_malloc
0000000000000000         *UND*	0000000000000000 lseek
0000000000000000         *UND*	0000000000000000 read
0000000000000000         *UND*	0000000000000000 section_ptr_add
0000000000000000         *UND*	0000000000000000 tcc_add_file
00000000000005d0 g     F .text	0000000000000065 put_elf_str
0000000000000000         *UND*	0000000000000000 strlen
0000000000000000         *UND*	0000000000000000 memcpy
0000000000000640 g     F .text	0000000000000233 put_elf_sym
0000000000000000         *UND*	0000000000000000 memset
0000000000000880 g     F .text	000000000000009b find_elf_sym
0000000000000000         *UND*	0000000000000000 strcmp
0000000000000920 g     F .text	0000000000000081 get_elf_sym_addr
0000000000000000         *UND*	0000000000000000 tcc_error
00000000000009b0 g     F .text	0000000000000007 tcc_get_symbol
00000000000009c0 g     F .text	000000000000000a tcc_get_symbol_err
00000000000009d0 g     F .text	0000000000000215 add_elf_sym
0000000000000000         *UND*	0000000000000000 tcc_state
0000000000000000         *UND*	0000000000000000 new_section
0000000000000000         *UND*	0000000000000000 symtab_section
0000000000000000         *UND*	0000000000000000 find_section
0000000000000000         *UND*	0000000000000000 data_section
0000000000000dc0 g     F .text	00000000000000dd put_elf_reloc
0000000000000000         *UND*	0000000000000000 tcc_realloc
0000000000001160 g     F .text	0000000000000098 put_stabs
0000000000000000         *UND*	0000000000000000 stab_section
0000000000000000         *UND*	0000000000000000 stabstr_section
0000000000001200 g     F .text	000000000000002d put_stabs_r
0000000000001230 g     F .text	0000000000000010 put_stabn
0000000000001240 g     F .text	0000000000000010 put_stabd
0000000000001250 g     F .text	0000000000000065 relocate_common_syms
0000000000000000         *UND*	0000000000000000 bss_section
00000000000012c0 g     F .text	0000000000000154 relocate_syms
0000000000000000         *UND*	0000000000000000 strtab_section
0000000000000000         *UND*	0000000000000000 resolve_sym
0000000000001420 g     F .text	00000000000002df relocate_section
0000000000001700 g     F .text	000000000000013d build_got_entries
0000000000001840 g     F .text	00000000000000e1 new_symtab
0000000000001930 g     F .text	0000000000000002 tcc_add_bcheck
0000000000001940 g     F .text	0000000000000037 tcc_add_runtime
0000000000000000         *UND*	0000000000000000 tcc_add_library
0000000000000000         *UND*	0000000000000000 tcc_add_crt
0000000000001980 g     F .text	00000000000001fa tcc_add_linker_symbols
0000000000000000         *UND*	0000000000000000 text_section
0000000000001b80 g     F .text	0000000000000042 patch_dynsym_undef
0000000000001bd0 g     F .text	00000000000000b9 fill_got_entry
0000000000000000         *UND*	0000000000000000 section_reserve
0000000000001c90 g     F .text	00000000000000af fill_got
0000000000001d40 g     F .text	0000000000001932 tcc_output_file
0000000000000000         *UND*	0000000000000000 tcc_mallocz
0000000000000000         *UND*	0000000000000000 unlink
0000000000000000         *UND*	0000000000000000 open
0000000000000000         *UND*	0000000000000000 fdopen
0000000000000000         *UND*	0000000000000000 fputc
0000000000000000         *UND*	0000000000000000 fwrite
0000000000000000         *UND*	0000000000000000 fclose
0000000000000000         *UND*	0000000000000000 tcc_free
0000000000000000         *UND*	0000000000000000 printf
0000000000000000         *UND*	0000000000000000 tcc_warning
0000000000000000         *UND*	0000000000000000 getenv
0000000000000000         *UND*	0000000000000000 strcpy
0000000000003680 g     F .text	00000000000008a8 tcc_load_object_file
0000000000003f30 g     F .text	000000000000032b tcc_load_archive
0000000000000000         *UND*	0000000000000000 strtol
0000000000004260 g     F .text	00000000000003fa tcc_load_dll
0000000000000000         *UND*	0000000000000000 tcc_basename
0000000000004660 g     F .text	0000000000000168 tcc_load_ldscript
0000000000000000         *UND*	0000000000000000 handle_eob



tccasm.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 tccasm.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000000 l     F .text	00000000000000ba asm_new_label1
00000000000000c0 l     F .text	000000000000002f use_section
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
00000000000000f0 l     F .text	000000000000018e parse_asm_operands
00000000000002f0 l     F .text	00000000000003a4 asm_expr_unary
00000000000007c0 l     F .text	00000000000000a9 asm_expr_logic
00000000000006a0 l     F .text	0000000000000111 asm_expr_prod
0000000000000a90 l     F .text	0000000000000a61 asm_parse_directive
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000001500 l     F .text	0000000000000289 tcc_assemble_internal
0000000000001790 l     F .text	000000000000009c tcc_assemble_inline
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000         *UND*	0000000000000000 label_find
0000000000000000         *UND*	0000000000000000 label_push
0000000000000000         *UND*	0000000000000000 get_tok_str
0000000000000000         *UND*	0000000000000000 tcc_error
0000000000000000         *UND*	0000000000000000 find_section
0000000000000000         *UND*	0000000000000000 ind
0000000000000000         *UND*	0000000000000000 cur_text_section
0000000000000000         *UND*	0000000000000000 tok
0000000000000000         *UND*	0000000000000000 expect
0000000000000000         *UND*	0000000000000000 tokc
0000000000000000         *UND*	0000000000000000 tcc_malloc
0000000000000000         *UND*	0000000000000000 strcpy
0000000000000000         *UND*	0000000000000000 next
0000000000000000         *UND*	0000000000000000 skip
0000000000000000         *UND*	0000000000000000 gexpr
0000000000000000         *UND*	0000000000000000 vtop
0000000000000000         *UND*	0000000000000000 strchr
0000000000000000         *UND*	0000000000000000 test_lvalue
0000000000000000         *UND*	0000000000000000 gv
0000000000000280 g     F .text	0000000000000067 asm_get_local_label_name
0000000000000000         *UND*	0000000000000000 snprintf
0000000000000000         *UND*	0000000000000000 tok_alloc
0000000000000000         *UND*	0000000000000000 strtoul
0000000000000870 g     F .text	00000000000000fc asm_expr
0000000000000970 g     F .text	0000000000000117 asm_int_expr
0000000000000000         *UND*	0000000000000000 tcc_warning
0000000000000000         *UND*	0000000000000000 gen_le32
0000000000000000         *UND*	0000000000000000 strtoll
0000000000000000         *UND*	0000000000000000 pstrcat
0000000000000000         *UND*	0000000000000000 sprintf
0000000000000000         *UND*	0000000000000000 last_text_section
0000000000000000         *UND*	0000000000000000 g
0000000000000000         *UND*	0000000000000000 section_ptr_add
0000000000000000         *UND*	0000000000000000 memset
0000000000000000         *UND*	0000000000000000 gen_le16
0000000000000000         *UND*	0000000000000000 gen_expr32
0000000000000000         *UND*	0000000000000000 file
0000000000000000         *UND*	0000000000000000 tok_flags
0000000000000000         *UND*	0000000000000000 ch
0000000000000000         *UND*	0000000000000000 parse_flags
0000000000000000         *UND*	0000000000000000 put_extern_sym2
0000000000000000         *UND*	0000000000000000 table_ident
0000000000000000         *UND*	0000000000000000 sym_free
0000000000000000         *UND*	0000000000000000 asm_opcode
0000000000000000         *UND*	0000000000000000 macro_ptr
0000000000000000         *UND*	0000000000000000 tcc_open_bf
0000000000000000         *UND*	0000000000000000 memcpy
0000000000000000         *UND*	0000000000000000 tcc_close
0000000000001830 g     F .text	00000000000000a3 tcc_assemble
0000000000000000         *UND*	0000000000000000 preprocess_init
0000000000000000         *UND*	0000000000000000 text_section
0000000000000000         *UND*	0000000000000000 symtab_section
0000000000000000         *UND*	0000000000000000 define_stack
0000000000000000         *UND*	0000000000000000 put_elf_sym
0000000000000000         *UND*	0000000000000000 free_defines
00000000000018e0 g     F .text	0000000000000101 find_constraint
00000000000019f0 g     F .text	0000000000000469 asm_instr
0000000000000000         *UND*	0000000000000000 parse_asm_str
0000000000000000         *UND*	0000000000000000 save_regs
0000000000000000         *UND*	0000000000000000 asm_compute_constraints
0000000000000000         *UND*	0000000000000000 asm_gen_code
0000000000000000         *UND*	0000000000000000 tcc_state
0000000000000000         *UND*	0000000000000000 tcc_free
0000000000000000         *UND*	0000000000000000 vpop
0000000000000000         *UND*	0000000000000000 cstr_free
0000000000000000         *UND*	0000000000000000 cstr_new
0000000000000000         *UND*	0000000000000000 cstr_ccat
0000000000000000         *UND*	0000000000000000 subst_asm_operand
0000000000000000         *UND*	0000000000000000 asm_clobber
0000000000001e60 g     F .text	000000000000007f asm_global_instr



tccrun.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 tccrun.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000000 l     F .text	000000000000041c rt_printline
0000000000000420 l     F .text	000000000000016a rt_error
0000000000000590 l     F .text	00000000000000ac sig_error
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000640 l     F .text	0000000000000028 set_pages_executable
0000000000000670 l     F .text	00000000000001fc tcc_relocate_ex
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000         *UND*	0000000000000000 stab_section
0000000000000000         *UND*	0000000000000000 stabstr_section
0000000000000000         *UND*	0000000000000000 symtab_section
0000000000000000         *UND*	0000000000000000 strtab_section
0000000000000000         *UND*	0000000000000000 pstrcpy
0000000000000000         *UND*	0000000000000000 stderr
0000000000000000         *UND*	0000000000000000 fprintf
0000000000000000         *UND*	0000000000000000 fwrite
0000000000000000         *UND*	0000000000000000 fputs
0000000000000000         *UND*	0000000000000000 fputc
0000000000000000         *UND*	0000000000000000 fflush
0000000000000000         *UND*	0000000000000000 strlen
0000000000000000         *UND*	0000000000000000 strcpy
0000000000000000         *UND*	0000000000000000 strchr
0000000000000000         *UND*	0000000000000000 memcpy
0000000000000000         *UND*	0000000000000000 vfprintf
0000000000000000 g     O .data	0000000000000004 rt_num_callers
0000000000000008       O *COM*	0000000000000008 rt_prog_main
0000000000000000         *UND*	0000000000000000 exit
0000000000000008       O *COM*	0000000000000008 rt_bound_error_msg
0000000000000000         *UND*	0000000000000000 mprotect
0000000000000000         *UND*	0000000000000000 relocate_syms
0000000000000000         *UND*	0000000000000000 relocate_section
0000000000000000         *UND*	0000000000000000 memset
0000000000000000         *UND*	0000000000000000 tcc_add_runtime
0000000000000000         *UND*	0000000000000000 relocate_common_syms
0000000000000000         *UND*	0000000000000000 tcc_add_linker_symbols
0000000000000000         *UND*	0000000000000000 build_got_entries
0000000000000870 g     F .text	0000000000000042 tcc_relocate
0000000000000000         *UND*	0000000000000000 tcc_malloc
00000000000008c0 g     F .text	00000000000000f4 tcc_run
0000000000000000         *UND*	0000000000000000 tcc_get_symbol_err
0000000000000000         *UND*	0000000000000000 sigemptyset
0000000000000000         *UND*	0000000000000000 sigaction
00000000000009c0 g     F .text	0000000000000007 tcc_set_num_callers
00000000000009d0 g     F .text	0000000000000007 resolve_sym
0000000000000000         *UND*	0000000000000000 dlsym



x86_64-gen.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 x86_64-gen.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000180 l     F .text	000000000000007e gen_gotpcrel
0000000000000380 l     F .text	000000000000011b gen_modrm_impl
00000000000004a0 l     F .text	0000000000000079 gen_modrm64
0000000000000520 l     F .text	000000000000002d push_arg_reg
0000000000000035 l     O .rodata	0000000000000006 arg_regs
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000030 l     O .rodata	0000000000000005 __PRETTY_FUNCTION__.8092
0000000000000b30 l     F .text	00000000000000ad gcall_or_jmp
0000000000000008 l     O .bss	0000000000000004 func_ret_sub
0000000000000000 l     O .bss	0000000000000008 func_sub_sp_offset
0000000000000040 l     O .rodata	0000000000000018 CSWTCH.68
0000000000000058 l     O .rodata	000000000000000d __PRETTY_FUNCTION__.8265
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 g     F .text	000000000000005a g
0000000000000000         *UND*	0000000000000000 ind
0000000000000000         *UND*	0000000000000000 cur_text_section
0000000000000000         *UND*	0000000000000000 section_realloc
0000000000000060 g     F .text	0000000000000020 o
0000000000000080 g     F .text	0000000000000013 gen_le16
00000000000000a0 g     F .text	0000000000000027 gen_le32
00000000000000d0 g     F .text	000000000000005e gen_le64
0000000000000130 g     F .text	0000000000000049 orex
0000000000000000         *UND*	0000000000000000 greloc
0000000000000200 g     F .text	0000000000000033 gsym_addr
0000000000000240 g     F .text	0000000000000033 gsym
0000000000000280 g     F .text	0000000000000064 oad
00000000000002f0 g     F .text	000000000000002b gen_addr32
0000000000000320 g     F .text	000000000000002d gen_addr64
0000000000000350 g     F .text	000000000000002c gen_addrpc32
0000000000000000         *UND*	0000000000000000 loc
0000000000000550 g     F .text	00000000000005d9 load
0000000000000000         *UND*	0000000000000000 is_float
0000000000000000 g     O .rodata	0000000000000030 reg_classes
0000000000000000         *UND*	0000000000000000 get_reg
0000000000000000         *UND*	0000000000000000 __assert_fail
0000000000000000         *UND*	0000000000000000 vtop
0000000000000000         *UND*	0000000000000000 symtab_section
0000000000000000         *UND*	0000000000000000 put_elf_reloc
0000000000000be0 g     F .text	0000000000000325 store
0000000000000000         *UND*	0000000000000000 abort
0000000000000f10 g     F .text	000000000000064d gfunc_call
0000000000000000         *UND*	0000000000000000 __vstack
0000000000000000         *UND*	0000000000000000 type_size
0000000000000000         *UND*	0000000000000000 gv
0000000000000000         *UND*	0000000000000000 vset
0000000000000000         *UND*	0000000000000000 vswap
0000000000000000         *UND*	0000000000000000 vstore
0000000000000000         *UND*	0000000000000000 save_regs
0000000000001560 g     F .text	00000000000002eb gfunc_prolog
0000000000000000         *UND*	0000000000000000 func_vt
0000000000000000         *UND*	0000000000000000 sym_push
0000000000000000         *UND*	0000000000000000 func_vc
0000000000001850 g     F .text	000000000000009c gfunc_epilog
00000000000018f0 g     F .text	000000000000000c gjmp
0000000000001900 g     F .text	0000000000000032 gjmp_addr
0000000000001940 g     F .text	000000000000022d gtst
0000000000000000         *UND*	0000000000000000 vpushi
0000000000000000         *UND*	0000000000000000 gen_op
0000000000001b70 g     F .text	0000000000000533 gen_opi
0000000000000000         *UND*	0000000000000000 gv2
0000000000000000         *UND*	0000000000000000 save_reg
00000000000020b0 g     F .text	0000000000000005 gen_opl
00000000000020c0 g     F .text	000000000000055f gen_opf
0000000000002620 g     F .text	0000000000000165 gen_cvt_itof
0000000000002790 g     F .text	0000000000000145 gen_cvt_ftof
00000000000028e0 g     F .text	00000000000000ed gen_cvt_ftoi
00000000000029d0 g     F .text	000000000000001b ggoto



i386-asm.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 i386-asm.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000000 l     F .text	0000000000000043 asm_parse_reg
0000000000000050 l     F .text	00000000000003ee parse_operand
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000420 l     O .rodata	0000000000000006 segment_prefixes
0000000000000440 l     O .rodata	0000000000000af0 asm_instrs
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000f40 l     O .rodata	00000000000000b2 op0_codes
0000000000001000 l     O .rodata	000000000000001e test_bits
0000000000000ff2 l     O .rodata	0000000000000009 reg_to_size
000000000000101e l     O .rodata	0000000000000003 reg_saved.8264
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000         *UND*	0000000000000000 tok
0000000000000000         *UND*	0000000000000000 expect
0000000000000000         *UND*	0000000000000000 next
0000000000000000         *UND*	0000000000000000 asm_expr
0000000000000000         *UND*	0000000000000000 skip
0000000000000000         *UND*	0000000000000000 unget_tok
0000000000000000         *UND*	0000000000000000 tcc_error
0000000000000000         *UND*	0000000000000000 asm_int_expr
0000000000000000         *UND*	0000000000000000 tokc
0000000000000440 g     F .text	0000000000000019 gen_expr32
0000000000000000         *UND*	0000000000000000 gen_addr32
0000000000000460 g     F .text	0000000000000caf asm_opcode
0000000000000000         *UND*	0000000000000000 g
0000000000000000         *UND*	0000000000000000 cur_text_section
0000000000000000         *UND*	0000000000000000 gen_addrpc32
0000000000000000         *UND*	0000000000000000 gen_addr64
0000000000000000         *UND*	0000000000000000 ind
0000000000000000         *UND*	0000000000000000 get_tok_str
0000000000000000         *UND*	0000000000000000 gen_le16
0000000000000000         *UND*	0000000000000000 gen_le32
0000000000001110 g     F .text	00000000000005af asm_compute_constraints
0000000000000000         *UND*	0000000000000000 find_constraint
00000000000016c0 g     F .text	0000000000000296 subst_asm_operand
0000000000000000         *UND*	0000000000000000 snprintf
0000000000000000         *UND*	0000000000000000 cstr_cat
0000000000000000         *UND*	0000000000000000 cstr_ccat
0000000000001960 g     F .text	0000000000000395 asm_gen_code
0000000000000000         *UND*	0000000000000000 store
0000000000000000         *UND*	0000000000000000 load
0000000000001d00 g     F .text	00000000000000bb asm_clobber
0000000000000000         *UND*	0000000000000000 strlen
0000000000000000         *UND*	0000000000000000 tok_alloc


